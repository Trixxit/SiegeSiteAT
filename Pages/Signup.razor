// signup.razor
@page "/signup"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@using FPSHome
@using FPSHome.Services
@inject InitializationService InitializationService
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Sign Up</PageTitle>

<FPSHome.wwwroot.Shared.Menubar />

<header class="title-section" style="background-image: url('/images/nicelooking.gif');">
    <h1 class="title">Sign Up</h1>
</header>

<div class="page-container">
    <div class="content-container">
        <section class="login-section">
            <div class="login-bubble">
                <div class="login-form">
                    <h2>Join Us!</h2>
                    <p>Please enter your details to sign up</p>
                    <EditForm Model="signupModel" OnValidSubmit="HandleSignUp">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="form-group">
                            <label for="username">Username</label>
                            <InputText id="username" class="form-control" Value="@signupModel.Username" ValueChanged="@((string e) => signupModel.Username = e)" ValueExpression="() => signupModel.Username" />
                            <ValidationMessage For="() => signupModel.Username" />
                        </div>
                        <div class="form-group">
                            <label for="password">Password</label>
                            <InputText id="password" type="password" class="form-control" Value="@signupModel.Password" ValueChanged="@((string e) => signupModel.Password = e)" ValueExpression="() => signupModel.Password" />
                            <ValidationMessage For="() => signupModel.Password" />
                        </div>
                        <button type="submit" class="btn-signup">Sign Up</button>
                    </EditForm>
                    <div class="error-message">@errorMessage</div>
                    <button class="btn-login" @onclick="NavigateToLogin">Login</button>
                </div>
            </div>
        </section>
    </div>
</div>

<footer class="footer">
    <p>&copy; 2024 FPS Stats Tracker. All rights reserved.</p>
</footer>

<button class="help-button">?</button>

@code {
    private SignUpModel signupModel = new SignUpModel();
    private string? errorMessage;

    private async Task HandleSignUp()
    {
        var username = signupModel.Username?.ToLower();
        bool exists = InitializationService.Userdata.Keys.Any(key => string.Equals(key, username, StringComparison.InvariantCultureIgnoreCase));
        if (username != null && !exists)
        {
            var newUser = new InitializationService.User
                {
                    Password = signupModel.Password,
                    TotalKills = 0,
                    TotalDeaths = 0,
                    Kds = [],
                    Favourites = new()
                    {
                        Operators = new List<string>(),
                        Maps = new List<string>()
                    },
                    HoursPlayed = 0
                };
            InitializationService.Userdata.Add(username, newUser);
            InitializationService.currentuser = (username, newUser);
            Navigation.NavigateTo("/home");
        }
        else
        {
            errorMessage = "Username already exists";
        }
    }

    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    public class SignUpModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; } = string.Empty;
    }
}
